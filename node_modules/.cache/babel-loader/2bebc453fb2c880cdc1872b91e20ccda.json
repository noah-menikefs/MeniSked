{"ast":null,"code":"var _jsxFileName = \"/Users/noah.menikefs/Desktop/menisked/MeniSked/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Login from './Components/Login/Login';\nimport Register from './Components/Login/Register';\nimport PerSchedule from './Components/Schedules/PerSchedule';\nimport PubSchedule from './Components/Schedules/PubSchedule';\nimport CSchedule from './Components/Schedules/CSchedule';\nimport Account from './Components/Account/Account';\nimport AMessages from './Components/Messages/AMessages';\nimport EMessages from './Components/Messages/EMessages';\nimport Holidays from './Components/Settings/Holidays';\nimport CallTypes from './Components/Settings/CallTypes';\nimport People from './Components/Settings/People';\nimport moment from 'moment';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.loadActiveDocs();\n    };\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          firstName: data.firstName,\n          lastName: data.lastName,\n          email: data.email,\n          colour: data.colour,\n          department: data.department,\n          isAdmin: data.isAdmin,\n          isActive: data.isActive\n        }\n      });\n    };\n\n    this.loadActiveDocs = () => {\n      fetch('http://localhost:3000/docs').then(response => response.json()).then(docs => this.setState({\n        activeDocs: docs\n      }));\n    };\n\n    this.onRouteChange = (route, isSignedIn = true) => {\n      this.setState({\n        isSignedIn: isSignedIn,\n        route: route\n      });\n    };\n\n    this.state = {\n      today: moment(),\n      isSignedIn: false,\n      route: 'Login',\n      user: {\n        id: '',\n        firstName: '',\n        lastName: 'Ismail',\n        email: '',\n        colour: '',\n        department: '',\n        isAdmin: true,\n        isActive: true\n      },\n      entries: [\"Request No Call\", \"Vacation\", \"Staycation\", \"No Assignment\", \"Not Available\", \"Not Available Night\", \"Assign Call Type\"]\n    };\n  }\n\n  /*\n  Different cases:\n  Login\n  Register\n  Personal Schedule\n  Published Schedule\n  Call Schedule\n  Account Information\n  Admin Messages\n  Messages\n  Holidays\n  Call Types\n  People\n  */\n  //used for rendering when signed in \n  inRenderSwitch(route) {\n    switch (route) {\n      case \"Personal Schedule\":\n        return /*#__PURE__*/React.createElement(PerSchedule, {\n          today: this.state.today,\n          entries: this.state.entries,\n          docs: this.state.docs,\n          user: this.state.user,\n          testIsAdmin: this.state.user.isAdmin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 16\n          }\n        });\n\n      case 'Published Schedule':\n        return /*#__PURE__*/React.createElement(PubSchedule, {\n          today: this.state.today,\n          user: this.state.user,\n          testIsAdmin: this.state.user.isAdmin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 16\n          }\n        });\n\n      case 'Call Schedule':\n        return /*#__PURE__*/React.createElement(CSchedule, {\n          today: this.state.today,\n          testIsAdmin: this.state.user.isAdmin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 16\n          }\n        });\n\n      case 'Account Information':\n        return /*#__PURE__*/React.createElement(Account, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 16\n          }\n        });\n\n      case 'Admin Messages':\n        return /*#__PURE__*/React.createElement(AMessages, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 16\n          }\n        });\n\n      case 'Messages':\n        return /*#__PURE__*/React.createElement(EMessages, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 16\n          }\n        });\n\n      case 'Holidays':\n        return /*#__PURE__*/React.createElement(Holidays, {\n          today: this.state.today,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 16\n          }\n        });\n\n      case 'Call Types':\n        return /*#__PURE__*/React.createElement(CallTypes, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 16\n          }\n        });\n\n      case 'People':\n        return /*#__PURE__*/React.createElement(People, {\n          department: this.state.user.department,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(PerSchedule, {\n          entries: this.state.entries,\n          docs: this.state.docs,\n          user: this.state.user,\n          testIsAdmin: this.state.user.isAdmin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 16\n          }\n        });\n    }\n  } //Used for rendering when signed out\n\n\n  outRenderSwitch(route) {\n    return route === 'Login' ? /*#__PURE__*/React.createElement(Login, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 32\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 103\n      }\n    });\n  }\n\n  render() {\n    const {\n      route,\n      isSignedIn,\n      user\n    } = this.state;\n    const {\n      isAdmin\n    } = user;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, !isSignedIn ? this.outRenderSwitch(route) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      testIsAdmin: isAdmin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, route), this.inRenderSwitch(route))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/noah.menikefs/Desktop/menisked/MeniSked/src/App.js"],"names":["React","Component","Navigation","Login","Register","PerSchedule","PubSchedule","CSchedule","Account","AMessages","EMessages","Holidays","CallTypes","People","moment","App","constructor","componentDidMount","loadActiveDocs","loadUser","data","setState","user","id","firstName","lastName","email","colour","department","isAdmin","isActive","fetch","then","response","json","docs","activeDocs","onRouteChange","route","isSignedIn","state","today","entries","inRenderSwitch","outRenderSwitch","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport Login from './Components/Login/Login';\nimport Register from './Components/Login/Register';\nimport PerSchedule from './Components/Schedules/PerSchedule';\nimport PubSchedule from './Components/Schedules/PubSchedule';\nimport CSchedule from './Components/Schedules/CSchedule';\nimport Account from './Components/Account/Account';\nimport AMessages from './Components/Messages/AMessages';\nimport EMessages from './Components/Messages/EMessages';\nimport Holidays from './Components/Settings/Holidays';\nimport CallTypes from './Components/Settings/CallTypes';\nimport People from './Components/Settings/People';\nimport moment from 'moment';\nimport './App.css';\n\n\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      today: moment(),\n      isSignedIn: false,\n      route: 'Login',\n      user:{\n        id: '',\n        firstName: '',\n        lastName: 'Ismail',\n        email: '',\n        colour: '',\n        department: '',\n        isAdmin: true,\n        isActive: true\n      },\n      entries: [\n        \"Request No Call\",\n        \"Vacation\",\n        \"Staycation\",\n        \"No Assignment\",\n        \"Not Available\",\n        \"Not Available Night\",\n        \"Assign Call Type\"\n      ]\n    }\n  }\n\n  componentDidMount = () => {\n    this.loadActiveDocs();\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      colour: data.colour,\n      department: data.department,\n      isAdmin: data.isAdmin,\n      isActive: data.isActive\n    }})\n  }\n\n  loadActiveDocs = () => {\n    fetch('http://localhost:3000/docs')\n      .then(response => response.json())\n      .then(docs => this.setState({activeDocs: docs}));\n  }\n\n  /*\n  Different cases:\n  Login\n  Register\n  Personal Schedule\n  Published Schedule\n  Call Schedule\n  Account Information\n  Admin Messages\n  Messages\n  Holidays\n  Call Types\n  People\n  */\n  //used for rendering when signed in \n  inRenderSwitch(route){\n    switch(route){\n      case \"Personal Schedule\": \n        return <PerSchedule today={this.state.today} entries={this.state.entries} docs={this.state.docs} user={this.state.user} testIsAdmin={this.state.user.isAdmin}/>\n      case 'Published Schedule': \n        return <PubSchedule today={this.state.today} user={this.state.user} testIsAdmin={this.state.user.isAdmin}/>\n      case 'Call Schedule': \n        return <CSchedule today={this.state.today} testIsAdmin={this.state.user.isAdmin}/>\n      case 'Account Information': \n        return <Account />\n      case 'Admin Messages': \n        return <AMessages  />\n      case 'Messages': \n        return <EMessages />\n      case 'Holidays': \n        return <Holidays today={this.state.today}/>\n      case 'Call Types': \n        return <CallTypes />\n      case 'People': \n        return <People department={this.state.user.department}/>\n      default:\n        return <PerSchedule entries={this.state.entries} docs={this.state.docs} user={this.state.user} testIsAdmin={this.state.user.isAdmin}/>\n    }\n  }\n\n\n  //Used for rendering when signed out\n  outRenderSwitch(route){\n    return route === 'Login' ? <Login loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n  }\n\n  onRouteChange = (route, isSignedIn = true) => {\n    this.setState({\n      isSignedIn: isSignedIn,\n      route: route\n    });\n  }\n\n\n  render(){\n     const {route, isSignedIn, user} = this.state;\n     const {isAdmin} = user;\n     return (\n        <div>\n        <div className=\"App\">\n          { (! isSignedIn)\n            ? this.outRenderSwitch(route)\n            : <div>\n                <Navigation onRouteChange={this.onRouteChange} testIsAdmin={isAdmin}/>\n                <br/>\n                <h1>{route}</h1>\n                {this.inRenderSwitch(route)}\n\n              </div>\n          }\n\n        </div>\n        </div>\n      );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}