{"ast":null,"code":"var _jsxFileName = \"/Users/noah.menikefs/Desktop/menisked/MeniSked/src/Components/Schedules/Calendar/Calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport './Calendar.css';\nmoment().format();\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.weekdays = moment.weekdays();\n    this.weekdaysShort = moment.weekdaysShort();\n    this.months = moment.months();\n\n    this.year = () => {\n      return this.state.dateContext.format('Y');\n    };\n\n    this.month = () => {\n      return this.state.dateContext.format('MMMM');\n    };\n\n    this.daysInMonth = () => {\n      return this.state.dateContext.daysInMonth();\n    };\n\n    this.currentDate = () => {\n      return this.state.dateContext.get('date');\n    };\n\n    this.currentDay = () => {\n      return this.state.dateContext.format('D');\n    };\n\n    this.firstDayofMonth = () => {\n      let dateContext = this.state.dateContext;\n      let firstDay = moment(dateContext).startOf('month').format('d'); //Day of week 0-6\n\n      return firstDay;\n    };\n\n    this.MonthNav = () => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"label-month\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(this.SelectList, {\n        data: this.months,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }\n      }));\n    };\n\n    this.state = {\n      width: props.width || \"350px\",\n      style: props.style || {},\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false\n    };\n    this.state.style.width = this.state.width;\n  }\n\n  render() {\n    //Map the weekdays as <td>\n    let weekdays = this.weekdaysShort.map(day => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: day,\n        className: \"week-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }\n      }, day);\n    });\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayofMonth(); i++) {\n      blanks.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: i * 80,\n        className: \"emptySlot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }\n      }, \" \"));\n    }\n\n    console.log(\"blanks: \", blanks);\n    let daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className = d === this.currentDay() ? \"day current-day\" : \"day\";\n      daysInMonth.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: d,\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }\n      }, d)));\n    }\n\n    console.log(\"days: \", daysInMonth);\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n    let trElements = rows.map((d, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i * 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }\n      }, d);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar-container\",\n      style: this.state.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"calendar-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(this.MonthNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    })))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, weekdays), trElements)));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/noah.menikefs/Desktop/menisked/MeniSked/src/Components/Schedules/Calendar/Calendar.js"],"names":["React","moment","format","Calendar","Component","constructor","props","weekdays","weekdaysShort","months","year","state","dateContext","month","daysInMonth","currentDate","get","currentDay","firstDayofMonth","firstDay","startOf","MonthNav","width","style","today","showMonthPopup","showYearPopup","render","map","day","blanks","i","push","console","log","d","className","totalSlots","rows","cells","forEach","row","insertRow","slice","length","trElements"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport './Calendar.css';\n\n\nmoment().format();\n\n\nclass Calendar extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\twidth: props.width || \"350px\",\n\t\t\tstyle: props.style || {},\n\t\t\tdateContext: moment(),\n\t\t\ttoday: moment(),\n\t\t\tshowMonthPopup: false,\n\t\t\tshowYearPopup: false\n\n\t\t}\n\t\tthis.state.style.width = this.state.width;\n\t}\n\n\n\tweekdays = moment.weekdays(); //List of weekdays\n\tweekdaysShort = moment.weekdaysShort(); //List of shortened days\n\tmonths = moment.months(); // List of each month\n\n\tyear = () => {\n\t\treturn this.state.dateContext.format('Y');\n\t}\n\tmonth = () => {\n\t\treturn this.state.dateContext.format('MMMM');\n\t}\n\tdaysInMonth = () => {\n\t\treturn this.state.dateContext.daysInMonth();\n\t}\n\tcurrentDate = () => {\n\t\treturn this.state.dateContext.get('date');\n\t}\n\tcurrentDay = () => {\n\t\treturn this.state.dateContext.format('D');\n\t}\n\n\tfirstDayofMonth = () => {\n\t\tlet dateContext = this.state.dateContext;\n\t\tlet firstDay = moment(dateContext).startOf('month').format('d'); //Day of week 0-6\n\t\treturn firstDay;\n\t}\n\n\tMonthNav = () => {\n\t\treturn (\n\t\t\t<span className=\"label-month\">\n\t\t\t\t<this.SelectList data={this.months} />\n\t\t\t</span>\n\n\n\t\t)\n\t}\n\n\trender(){\n\n\t\t//Map the weekdays as <td>\n\t\tlet weekdays = this.weekdaysShort.map((day) => {\n\t\t\treturn (\n\t\t\t\t<td key={day} className=\"week-day\">{day}</td>\n\t\t\t)\n\t\t});\n\t\tlet blanks = [];\n\t\tfor (let i = 0; i < this.firstDayofMonth(); i++){\n\t\t\tblanks.push(<td key={i*80} className=\"emptySlot\">{\" \"}</td>);\t\n\t\t}\n\n\t\tconsole.log(\"blanks: \", blanks);\n\n\t\tlet daysInMonth = [];\n\t\tfor (let d = 1; d <= this.daysInMonth(); d++){\n\t\t\tlet className = (d === this.currentDay() ? \"day current-day\" : \"day\");\n\t\t\tdaysInMonth.push(\n\t\t\t\t<td key={d} className={className}>\n\t\t\t\t\t<span>{d}</span>\n\t\t\t\t</td>\n\t\t\t);\n\t\t}\n\n\t\tconsole.log(\"days: \", daysInMonth);\n\n\t\tvar totalSlots = [...blanks, ...daysInMonth];\n\t\tlet rows = [];\n\t\tlet cells = [];\n\n\t\ttotalSlots.forEach((row, i) => {\n\t\t\tif ((i % 7) !== 0 ) {\n\t\t\t\tcells.push(row);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlet insertRow = cells.slice();\n\t\t\t\trows.push(insertRow);\n\t\t\t\tcells = [];\n\t\t\t\tcells.push(row);\n\t\t\t}\n\t\t\tif (i === totalSlots.length -1 ){\n\t\t\t\tlet insertRow = cells.slice();\n\t\t\t\trows.push(insertRow);\n\t\t\t}\n\t\t});\n\n\t\tlet trElements = rows.map((d, i) => {\n\t\t\treturn (\n\t\t\t\t<tr key={i*100}>\n\t\t\t\t\t{d}\n\t\t\t\t</tr>\n\t\t\t);\n\t\t})\n\n\n\n\t\treturn(\n\t\t\t<div className=\"calendar-container\" style={this.state.style}>\n\t\t\t\t<table className=\"calendar\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr className=\"calendar-header\">\n\t\t\t\t\t\t\t<td colSpan=\"5\">\n\t\t\t\t\t\t\t\t<this.MonthNav/>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t{weekdays}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t{trElements}\n\t\t\t\t\t</tbody>\n\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\n\n\n\t}\n\n\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}