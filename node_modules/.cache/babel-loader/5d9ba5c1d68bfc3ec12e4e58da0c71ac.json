{"ast":null,"code":"'use strict'; // combine 2 matrixes\n// m1, m2 - [a, b, c, d, e, g]\n//\n\nfunction combine(m1, m2) {\n  return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n}\n\nfunction Matrix() {\n  if (!(this instanceof Matrix)) {\n    return new Matrix();\n  }\n\n  this.queue = []; // list of matrixes to apply\n\n  this.cache = null; // combined matrix cache\n}\n\nMatrix.prototype.matrix = function (m) {\n  if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1 && m[4] === 0 && m[5] === 0) {\n    return this;\n  }\n\n  this.cache = null;\n  this.queue.push(m);\n  return this;\n};\n\nMatrix.prototype.translate = function (tx, ty) {\n  if (tx !== 0 || ty !== 0) {\n    this.cache = null;\n    this.queue.push([1, 0, 0, 1, tx, ty]);\n  }\n\n  return this;\n};\n\nMatrix.prototype.scale = function (sx, sy) {\n  if (sx !== 1 || sy !== 1) {\n    this.cache = null;\n    this.queue.push([sx, 0, 0, sy, 0, 0]);\n  }\n\n  return this;\n};\n\nMatrix.prototype.rotate = function (angle, rx, ry) {\n  var rad, cos, sin;\n\n  if (angle !== 0) {\n    this.translate(rx, ry);\n    rad = angle * Math.PI / 180;\n    cos = Math.cos(rad);\n    sin = Math.sin(rad);\n    this.queue.push([cos, sin, -sin, cos, 0, 0]);\n    this.cache = null;\n    this.translate(-rx, -ry);\n  }\n\n  return this;\n};\n\nMatrix.prototype.skewX = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0]);\n  }\n\n  return this;\n};\n\nMatrix.prototype.skewY = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0]);\n  }\n\n  return this;\n}; // Flatten queue\n//\n\n\nMatrix.prototype.toArray = function () {\n  if (this.cache) {\n    return this.cache;\n  }\n\n  if (!this.queue.length) {\n    this.cache = [1, 0, 0, 1, 0, 0];\n    return this.cache;\n  }\n\n  this.cache = this.queue[0];\n\n  if (this.queue.length === 1) {\n    return this.cache;\n  }\n\n  for (var i = 1; i < this.queue.length; i++) {\n    this.cache = combine(this.cache, this.queue[i]);\n  }\n\n  return this.cache;\n}; // Apply list of matrixes to (x,y) point.\n// If `isRelative` set, `translate` component of matrix will be skipped\n//\n\n\nMatrix.prototype.calc = function (x, y, isRelative) {\n  var m; // Don't change point on empty transforms queue\n\n  if (!this.queue.length) {\n    return [x, y];\n  } // Calculate final matrix, if not exists\n  //\n  // NB. if you deside to apply transforms to point one-by-one,\n  // they should be taken in reverse order\n\n\n  if (!this.cache) {\n    this.cache = this.toArray();\n  }\n\n  m = this.cache; // Apply matrix to point\n\n  return [x * m[0] + y * m[2] + (isRelative ? 0 : m[4]), x * m[1] + y * m[3] + (isRelative ? 0 : m[5])];\n};\n\nmodule.exports = Matrix;","map":{"version":3,"sources":["/Users/noah.menikefs/Desktop/menisked/MeniSked/node_modules/svgpath/lib/matrix.js"],"names":["combine","m1","m2","Matrix","queue","cache","prototype","matrix","m","push","translate","tx","ty","scale","sx","sy","rotate","angle","rx","ry","rad","cos","sin","Math","PI","skewX","tan","skewY","toArray","length","i","calc","x","y","isRelative","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n// combine 2 matrixes\n// m1, m2 - [a, b, c, d, e, g]\n//\nfunction combine(m1, m2) {\n  return [\n    m1[0] * m2[0] + m1[2] * m2[1],\n    m1[1] * m2[0] + m1[3] * m2[1],\n    m1[0] * m2[2] + m1[2] * m2[3],\n    m1[1] * m2[2] + m1[3] * m2[3],\n    m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n    m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n  ];\n}\n\n\nfunction Matrix() {\n  if (!(this instanceof Matrix)) { return new Matrix(); }\n  this.queue = [];   // list of matrixes to apply\n  this.cache = null; // combined matrix cache\n}\n\n\nMatrix.prototype.matrix = function (m) {\n  if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1 && m[4] === 0 && m[5] === 0) {\n    return this;\n  }\n  this.cache = null;\n  this.queue.push(m);\n  return this;\n};\n\n\nMatrix.prototype.translate = function (tx, ty) {\n  if (tx !== 0 || ty !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, 0, 0, 1, tx, ty ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.scale = function (sx, sy) {\n  if (sx !== 1 || sy !== 1) {\n    this.cache = null;\n    this.queue.push([ sx, 0, 0, sy, 0, 0 ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.rotate = function (angle, rx, ry) {\n  var rad, cos, sin;\n\n  if (angle !== 0) {\n    this.translate(rx, ry);\n\n    rad = angle * Math.PI / 180;\n    cos = Math.cos(rad);\n    sin = Math.sin(rad);\n\n    this.queue.push([ cos, sin, -sin, cos, 0, 0 ]);\n    this.cache = null;\n\n    this.translate(-rx, -ry);\n  }\n  return this;\n};\n\n\nMatrix.prototype.skewX = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0 ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.skewY = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0 ]);\n  }\n  return this;\n};\n\n\n// Flatten queue\n//\nMatrix.prototype.toArray = function () {\n  if (this.cache) {\n    return this.cache;\n  }\n\n  if (!this.queue.length) {\n    this.cache = [ 1, 0, 0, 1, 0, 0 ];\n    return this.cache;\n  }\n\n  this.cache = this.queue[0];\n\n  if (this.queue.length === 1) {\n    return this.cache;\n  }\n\n  for (var i = 1; i < this.queue.length; i++) {\n    this.cache = combine(this.cache, this.queue[i]);\n  }\n\n  return this.cache;\n};\n\n\n// Apply list of matrixes to (x,y) point.\n// If `isRelative` set, `translate` component of matrix will be skipped\n//\nMatrix.prototype.calc = function (x, y, isRelative) {\n  var m;\n\n  // Don't change point on empty transforms queue\n  if (!this.queue.length) { return [ x, y ]; }\n\n  // Calculate final matrix, if not exists\n  //\n  // NB. if you deside to apply transforms to point one-by-one,\n  // they should be taken in reverse order\n\n  if (!this.cache) {\n    this.cache = this.toArray();\n  }\n\n  m = this.cache;\n\n  // Apply matrix to point\n  return [\n    x * m[0] + y * m[2] + (isRelative ? 0 : m[4]),\n    x * m[1] + y * m[3] + (isRelative ? 0 : m[5])\n  ];\n};\n\n\nmodule.exports = Matrix;\n"]},"metadata":{},"sourceType":"script"}