{"ast":null,"code":"var _jsxFileName = \"/Users/noah.menikefs/Desktop/menisked/MeniSked/src/Components/Messages/AMessages.js\";\nimport React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport moment from 'moment';\nimport './Messages.css';\n\nclass AMessages extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.loadMessages();\n      this.loadUsers();\n      this.loadEntries();\n      this.loadCallTypes();\n    };\n\n    this.months = moment.months();\n\n    this.loadMessages = () => {\n      fetch('http://localhost:3000/amessages').then(response => response.json()).then(messages => this.setState({\n        messages: messages,\n        filteredMsgs: messages\n      }));\n    };\n\n    this.loadUsers = () => {\n      fetch('http://localhost:3000/people').then(response => response.json()).then(users => this.setState({\n        peopleList: users\n      }));\n    };\n\n    this.loadEntries = () => {\n      fetch('http://localhost:3000/sked/entries').then(response => response.json()).then(entries => this.setState({\n        entryList: entries\n      }));\n    };\n\n    this.loadCallTypes = () => {\n      fetch('http://localhost:3000/callTypes').then(response => response.json()).then(calls => this.setState({\n        callList: calls\n      }));\n    };\n\n    this.respond = (id, status) => {\n      fetch('http://localhost:3000/amessages', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          status: status,\n          msg: this.state.msg,\n          stamp: this.props.today.format('MM/DD/YYYY')\n        })\n      }).then(response => response.json()).then(message => {\n        if (message) {\n          this.loadMessages();\n        }\n      });\n\n      if (status === 'accepted') {\n        this.accept(id);\n      }\n\n      this.setState({\n        msg: '',\n        show: false\n      });\n    };\n\n    this.accept = id => {\n      fetch('http://localhost:3000/arequest', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id\n        })\n      }).then(response => response.json()).then(user => {\n        if (user.lastname) {\n          this.loadMessages();\n        }\n      });\n    };\n\n    this.toggleShow = (id = -1) => {\n      this.setState({\n        show: !this.state.show,\n        msg: '',\n        id: id\n      });\n    };\n\n    this.toggleDShow = route => {\n      this.setState({\n        dshow: !this.state.dshow,\n        msg: route\n      });\n    };\n\n    this.onMsgChange = event => {\n      this.setState({\n        msg: event.target.value\n      });\n    };\n\n    this.docIdToName = id => {\n      const {\n        peopleList\n      } = this.state;\n      id = parseInt(id, 10);\n\n      for (let i = 0; i < peopleList.length; i++) {\n        if (id === peopleList[i].id) {\n          return peopleList[i].firstname + ' ' + peopleList[i].lastname;\n        }\n      }\n    };\n\n    this.entryIdToName = id => {\n      id = parseInt(id, 10);\n      const arr = [...this.state.entryList, ...this.state.callList];\n\n      for (let i = 0; i < arr.length; i++) {\n        if (id === arr[i].id) {\n          return arr[i].name;\n        }\n      }\n    };\n\n    this.dateStyler = dates => {\n      let splitArr = [];\n      let flag = false;\n\n      if (dates.length === 1) {\n        splitArr = dates[0].split('/');\n        return 'on ' + this.months[splitArr[0] - 1] + ' ' + splitArr[1] + ', ' + splitArr[2];\n      }\n\n      for (let i = 0; i < dates.length; i++) {\n        if (dates[i].charAt(4) === '/') {\n          dates[i] = dates[i].substring(0, 3) + '0' + dates[i].substring(3);\n        }\n      }\n\n      dates.sort(function (a, b) {\n        return a.substring(3, 5) - b.substring(3, 5);\n      });\n\n      for (let i = 0; i < dates.length; i++) {\n        splitArr.push(dates[i].split('/'));\n      }\n\n      for (let n = 1; n < splitArr.length; n++) {\n        if (splitArr[n][0] !== splitArr[n - 1][0] || splitArr[n][1] - 1 !== parseInt(splitArr[n - 1][1], 10) || splitArr[n][2] !== splitArr[n - 1][2]) {\n          flag = true;\n          break;\n        }\n      }\n\n      if (flag) {\n        let str = \"on \" + this.months[splitArr[0][0] - 1] + ' ' + splitArr[0][1] + ', ' + splitArr[0][2];\n\n        for (let j = 1; j < splitArr.length; j++) {\n          str = str + ', ' + this.months[splitArr[j][0] - 1] + ' ' + splitArr[j][1] + ', ' + splitArr[j][2];\n        }\n\n        return str;\n      }\n\n      return 'from ' + this.months[splitArr[0][0] - 1] + ' ' + splitArr[0][1] + ', ' + splitArr[0][2] + ' - ' + this.months[splitArr[splitArr.length - 1][0] - 1] + ' ' + splitArr[splitArr.length - 1][1] + ', ' + splitArr[splitArr.length - 1][2];\n    };\n\n    this.showMore = () => {\n      this.setState({\n        ctr: this.state.ctr + 10\n      });\n    };\n\n    this.showButton = length => {\n      if (this.state.ctr < length) {\n        return /*#__PURE__*/React.createElement(Button, {\n          onClick: this.showMore,\n          className: \"showMore\",\n          variant: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 12\n          }\n        }, \"Show More\");\n      }\n    };\n\n    this.sortDates = arr => {\n      let list = [...arr];\n      let index = 0;\n      let currDate = [];\n      let newDate = [];\n      let temp;\n      let len = list.length;\n      let flag = false;\n\n      for (let i = 0; i < len - 1; i++) {\n        index = i;\n        currDate = list[i].stamp.split('/');\n\n        for (let j = i + 1; j < len; j++) {\n          flag = false;\n          newDate = list[j].stamp.split('/');\n\n          if (parseInt(newDate[2], 10) > parseInt(currDate[2], 10)) {\n            flag = true;\n          } else if (parseInt(newDate[2], 10) === parseInt(currDate[2], 10)) {\n            if (parseInt(newDate[0], 10) > parseInt(currDate[0], 10)) {\n              flag = true;\n            } else if (parseInt(newDate[0], 10) === parseInt(currDate[0], 10) && parseInt(newDate[1], 10) > parseInt(currDate[1], 10)) {\n              flag = true;\n            }\n          }\n\n          if (flag) {\n            index = j;\n            currDate = list[j].stamp.split('/');\n          }\n        }\n\n        if (index !== i) {\n          temp = list[i];\n          list[i] = list[index];\n          list[index] = temp;\n        }\n      }\n\n      return list;\n    };\n\n    this.onPhysicianChange = event => {\n      const {\n        peopleList\n      } = this.state;\n\n      if (event.target.key) {\n        this.setState({\n          selectIndex: event.target.key\n        });\n      } else {\n        if (event.target.value !== 'All') {\n          let index = -1;\n\n          for (let i = 0; i < peopleList.length; i++) {\n            if (peopleList[i].lastname === event.target.value) {\n              index = i;\n              break;\n            }\n          }\n\n          this.filter(peopleList[index]);\n        } else {\n          this.filter('All');\n        }\n      }\n    };\n\n    this.filter = doc => {\n      const {\n        messages\n      } = this.state;\n\n      if (doc === 'All') {\n        this.setState({\n          filteredMsgs: messages\n        });\n      } else {\n        this.setState({\n          filteredMsgs: messages.filter(message => message.docid === doc.id)\n        });\n      }\n    };\n\n    this.state = {\n      show: false,\n      msg: '',\n      dshow: false,\n      messages: [],\n      filteredMsgs: [],\n      peopleList: [],\n      entryList: [],\n      callList: [],\n      ctr: 10,\n      id: -1,\n      selectIndex: 0\n    };\n  }\n\n  render() {\n    const {\n      show,\n      dshow,\n      msg,\n      messages,\n      ctr,\n      peopleList,\n      selectIndex,\n      filteredMsgs\n    } = this.state;\n    let pendingList = [];\n    let pastList = [];\n    let pends = [];\n    let past = [];\n\n    for (let i = 0; i < messages.length; i++) {\n      if (messages[i].status === 'pending') {\n        pends.push(messages[i]);\n      }\n    }\n\n    for (let i = 0; i < filteredMsgs.length; i++) {\n      if (filteredMsgs[i].status !== 'pending') {\n        past.push(filteredMsgs[i]);\n      }\n    }\n\n    pends = this.sortDates(pends);\n    past = this.sortDates(past);\n\n    for (let n = 0; n < pends.length; n++) {\n      pendingList.push( /*#__PURE__*/React.createElement(ListGroup, {\n        key: n,\n        horizontal: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        className: \"pend list\",\n        action: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"requestList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 51\n        }\n      }, this.docIdToName(pends[n].docid), \" has requested \", this.entryIdToName(pends[n].entryid), \" \", this.dateStyler(pends[n].dates)), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.respond(pends[n].id, 'accepted'),\n        className: \"accept\",\n        size: \"sm\",\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }\n      }, \"Accept\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.toggleShow(pends[n].id),\n        className: \"deny\",\n        size: \"sm\",\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 9\n        }\n      }, \"Deny\")), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        className: \"dates list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 6\n        }\n      }, pends[n].stamp)));\n    }\n\n    for (let j = 0; j < Math.min(past.length, ctr); j++) {\n      if (past[j].status === 'accepted') {\n        pastList.push( /*#__PURE__*/React.createElement(ListGroup, {\n          key: j,\n          horizontal: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n          className: \"past list\",\n          action: true,\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 7\n          }\n        }, \"You \", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"accepted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 12\n          }\n        }, \"accepted\"), \" \", this.docIdToName(past[j].docid), \"'s request for \", this.entryIdToName(past[j].entryid), \" \", this.dateStyler(past[j].dates)), /*#__PURE__*/React.createElement(ListGroup.Item, {\n          className: \"edates list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 7\n          }\n        }, past[j].stamp)));\n      } else {\n        pastList.push( /*#__PURE__*/React.createElement(ListGroup, {\n          key: j,\n          horizontal: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n          className: \"past list\",\n          action: true,\n          onClick: () => this.toggleDShow(past[j].msg),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 7\n          }\n        }, \"You \", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"denied\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 12\n          }\n        }, \"denied\"), \" \", this.docIdToName(past[j].docid), \"'s request for \", this.entryIdToName(past[j].entryid), \" \", this.dateStyler(past[j].dates)), /*#__PURE__*/React.createElement(ListGroup.Item, {\n          className: \"edates list\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 7\n          }\n        }, past[j].stamp)));\n      }\n    }\n\n    let docSelect = peopleList.map((doc, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: doc.lastname,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }\n      }, doc.lastname);\n    });\n    docSelect.unshift( /*#__PURE__*/React.createElement(\"option\", {\n      key: -1,\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }, \"All\"));\n\n    let adminSelect = () => {\n      return /*#__PURE__*/React.createElement(\"select\", {\n        /*value={peopleList[selectIndex].lastname || 'All'}*/\n        onChange: this.onPhysicianChange,\n        className: \"top-child doc selector\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 5\n        }\n      }, docSelect);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"requests\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 5\n      }\n    }, \"Pending\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"listStyleA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 5\n      }\n    }, pendingList), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"requests\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 6\n      }\n    }, \"Past Requests\"), adminSelect()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"listStyleE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 5\n      }\n    }, pastList), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 5\n      }\n    }, this.showButton(past.length)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: show,\n      onHide: this.toggleShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"modalTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 16\n      }\n    }, \"Denied Request Explanation\")), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: this.onMsgChange,\n      as: \"textarea\",\n      rows: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.toggleShow,\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.respond(this.state.id, \"denied\"),\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 18\n      }\n    }, \"Submit\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: dshow,\n      onHide: () => this.toggleDShow(''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      id: \"modalTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 8\n      }\n    }, \"Denied Request Explanation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 8\n      }\n    }, msg)), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleDShow(''),\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 8\n      }\n    }, \"Close\")))));\n  }\n\n}\n\nexport default AMessages;","map":{"version":3,"sources":["/Users/noah.menikefs/Desktop/menisked/MeniSked/src/Components/Messages/AMessages.js"],"names":["React","ListGroup","Button","Modal","Form","moment","AMessages","Component","constructor","componentDidMount","loadMessages","loadUsers","loadEntries","loadCallTypes","months","fetch","then","response","json","messages","setState","filteredMsgs","users","peopleList","entries","entryList","calls","callList","respond","id","status","method","headers","body","JSON","stringify","msg","state","stamp","props","today","format","message","accept","show","user","lastname","toggleShow","toggleDShow","route","dshow","onMsgChange","event","target","value","docIdToName","parseInt","i","length","firstname","entryIdToName","arr","name","dateStyler","dates","splitArr","flag","split","charAt","substring","sort","a","b","push","n","str","j","showMore","ctr","showButton","sortDates","list","index","currDate","newDate","temp","len","onPhysicianChange","key","selectIndex","filter","doc","docid","render","pendingList","pastList","pends","past","entryid","Math","min","docSelect","map","unshift","adminSelect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport moment from 'moment';\nimport './Messages.css';\n\n\nclass AMessages extends React.Component{\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tshow: false,\n\t\t\tmsg: '',\n\t\t\tdshow: false,\n\t\t\tmessages: [],\n\t\t\tfilteredMsgs: [],\n\t\t\tpeopleList: [],\n\t\t\tentryList: [],\n\t\t\tcallList: [],\n\t\t\tctr: 10,\n\t\t\tid: -1,\n\t\t\tselectIndex: 0\n\t\t}\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.loadMessages();\n\t\tthis.loadUsers();\n\t\tthis.loadEntries();\n\t\tthis.loadCallTypes();\n\t}\n\n\tmonths = moment.months(); // List of each month\n\n\tloadMessages = () => {\n\t\tfetch('http://localhost:3000/amessages')\n\t\t\t.then(response => response.json())\n\t\t\t.then(messages => this.setState({\n\t\t\t\tmessages: messages,\n\t\t\t\tfilteredMsgs: messages\n\t\t\t}));\n\t}\n\n\tloadUsers = () => {\n\t\tfetch('http://localhost:3000/people')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({peopleList: users}));\n\t}\n\n\tloadEntries = () => {\n\t\tfetch('http://localhost:3000/sked/entries')\n\t\t\t.then(response => response.json())\n\t\t\t.then(entries => this.setState({entryList: entries}));\n\t}\n\n\tloadCallTypes = () => {\n\t\tfetch('http://localhost:3000/callTypes')\n\t\t\t.then(response => response.json())\n\t\t\t.then(calls => this.setState({callList: calls}));\n\t}\n\t\n\trespond = (id, status) => {\n\t\tfetch('http://localhost:3000/amessages', {\n\t\t\tmethod: 'put',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tid: id,\n\t\t\t\tstatus: status,\n\t\t\t\tmsg: this.state.msg,\n\t\t\t\tstamp: this.props.today.format('MM/DD/YYYY')\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(message => {\n\t\t\t\tif (message){\n\t\t\t\t\tthis.loadMessages();\n\t\t\t\t}\n\t\t\t})\n\t\tif (status === 'accepted'){\n\t\t\tthis.accept(id);\n\t\t}\n\t\tthis.setState({\n\t\t\tmsg: '',\n\t\t\tshow: false\n\t\t})\n\t}\n\n\taccept = (id) => {\n\t\tfetch('http://localhost:3000/arequest', {\n\t\t\tmethod: 'put',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tid: id\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(user => {\n\t\t\t\tif (user.lastname){\n\t\t\t\t\tthis.loadMessages();\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\ttoggleShow = (id = -1) => {\n\t\tthis.setState({\n\t\t\tshow: !this.state.show,\n\t\t\tmsg: '',\n\t\t\tid: id\n\t\t});\n\t}\n\n\ttoggleDShow = (route) => {\n\t    this.setState({ \n\t\t\tdshow: !this.state.dshow,\n\t\t    msg: route\n\t   \t});\n\t };\n\n\tonMsgChange = (event) => {\n\t\tthis.setState({msg: event.target.value});\n\t}\n\n\tdocIdToName = (id) => {\n\t\tconst {peopleList} = this.state;\n\t\tid = parseInt(id,10);\n\t\tfor (let i = 0; i < peopleList.length; i++){\n\t\t\tif (id === peopleList[i].id){\n\t\t\t\treturn peopleList[i].firstname + ' ' + peopleList[i].lastname;\n\t\t\t}\n\t\t}\n\t}\n\n\tentryIdToName = (id) => {\n\t\tid = parseInt(id,10);\n\t\tconst arr = [...this.state.entryList, ...this.state.callList]\n\t\tfor (let i = 0; i < arr.length; i++){\n\t\t\tif (id === arr[i].id){\n\t\t\t\treturn arr[i].name;\n\t\t\t}\n\t\t}\n\t}\n\n\tdateStyler = (dates) => {\n\t\tlet splitArr = [];\n\t\tlet flag = false;\n\n\t\tif (dates.length === 1){\n\t\t\tsplitArr = dates[0].split('/');\n\t\t\treturn 'on ' + this.months[splitArr[0] - 1] + ' ' + splitArr[1] + ', ' + splitArr[2];\n\t\t}\n\n\t\tfor (let i = 0; i < dates.length; i++){\n\t\t\tif (dates[i].charAt(4) === '/'){\n\t\t\t\tdates[i] = dates[i].substring(0,3) + '0' + dates[i].substring(3);\n\t\t\t}\n\t\t}\n\n\t\tdates.sort(function(a, b){return a.substring(3,5) - b.substring(3,5)})\n\n\t\tfor (let i = 0; i < dates.length; i++){\n\t\t\tsplitArr.push(dates[i].split('/'));\n\t\t}\n\n\n\t\tfor (let n = 1; n < splitArr.length; n++){\n\t\t\tif (splitArr[n][0] !== splitArr[n-1][0] || (splitArr[n][1] - 1) !== parseInt(splitArr[n-1][1],10) || splitArr[n][2] !== splitArr[n-1][2]){\n\t\t\t\tflag = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (flag){\n\t\t\tlet str = \"on \" + this.months[splitArr[0][0] - 1] + ' ' + splitArr[0][1] + ', ' + splitArr[0][2];\n\t\t\tfor (let j = 1; j < splitArr.length; j++){\n\t\t\t\tstr = str + ', ' + this.months[splitArr[j][0] - 1] + ' ' + splitArr[j][1] + ', ' + splitArr[j][2];\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\n\t\treturn 'from ' + this.months[splitArr[0][0] - 1] + ' ' + splitArr[0][1] + ', ' + splitArr[0][2] + ' - ' + this.months[splitArr[splitArr.length - 1][0] - 1] + ' ' + splitArr[splitArr.length - 1][1] + ', ' + splitArr[splitArr.length - 1][2]\n\t\n\t}\n\n\tshowMore = () => {\n\t\tthis.setState({ctr: this.state.ctr+10})\n\t}\n\n\tshowButton = (length) => {\n\t\tif (this.state.ctr < length){\n\t\t\treturn (<Button onClick={this.showMore} className='showMore' variant=\"primary\">Show More</Button>);\n\t\t}\n\t}\n\n\tsortDates = (arr) => {\n\t\tlet list = [...arr];\n\t\tlet index = 0;\n\t\tlet currDate = [];\n\t\tlet newDate = [];\n\t\tlet temp;\n\t\tlet len = list.length;\n\t\tlet flag = false;\n\n\t\tfor (let i = 0; i < len - 1; i++){\n\t\t\tindex = i;\n\t\t\tcurrDate = list[i].stamp.split('/');\n\t\t\tfor (let j = i+1; j < len; j++){\n\t\t\t\tflag = false;\n\t\t\t\tnewDate = list[j].stamp.split('/');\n\t\t\t\tif (parseInt(newDate[2],10) > parseInt(currDate[2],10)){\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t\telse if (parseInt(newDate[2],10) === parseInt(currDate[2],10)){\n\t\t\t\t\tif (parseInt(newDate[0],10) > parseInt(currDate[0],10)){\n\t\t\t\t\t\tflag = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (parseInt(newDate[0],10) === parseInt(currDate[0],10) && parseInt(newDate[1],10) > parseInt(currDate[1],10)){\n\t\t\t\t\t\tflag = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (flag){\n\t\t\t\t\tindex = j;\n\t\t\t\t\tcurrDate = list[j].stamp.split('/');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (index !== i){\n\t\t\t\ttemp = list[i];\n\t\t\t\tlist[i] = list[index];\n\t\t\t\tlist[index] = temp;\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t}\n\n\tonPhysicianChange = (event) => {\n\t\tconst {peopleList} = this.state;\n\t\tif (event.target.key){\n\t\t\tthis.setState({selectIndex: event.target.key})\n\t\t}\n\t\telse{\n\t\t\tif (event.target.value !== 'All'){\n\t\t\t\tlet index = -1;\n\t\t\t\tfor (let i = 0; i < peopleList.length; i++){\n\t\t\t\t\tif (peopleList[i].lastname === event.target.value){\n\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.filter(peopleList[index])\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.filter('All');\n\t\t\t}\n\t\t}\n\t}\n\n\tfilter = (doc) => {\n\t\tconst {messages} = this.state;\n\t\tif (doc === 'All'){\n\t\t\tthis.setState({filteredMsgs: messages})\n\t\t}\n\t\telse{\n\t\t\tthis.setState({filteredMsgs: messages.filter((message => message.docid === doc.id))});\n\t\t}\n\t}\n\n\trender(){\n\t\tconst {show, dshow, msg, messages, ctr, peopleList, selectIndex, filteredMsgs} = this.state;\n\t\tlet pendingList = [];\n\t\tlet pastList = [];\n\t\tlet pends = [];\n\t\tlet past = [];\n\t\tfor (let i = 0; i < messages.length; i++){\n\t\t\tif (messages[i].status === 'pending'){\n\t\t\t\tpends.push(messages[i]);\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < filteredMsgs.length; i++){\n\t\t\tif (filteredMsgs[i].status !== 'pending'){\n\t\t\t\tpast.push(filteredMsgs[i]);\n\t\t\t}\n\t\t}\n\n\t\tpends = this.sortDates(pends);\n\t\tpast = this.sortDates(past);\n\n\n\t\tfor (let n = 0; n < pends.length; n++){\n\t\t\tpendingList.push(\n\t\t\t\t<ListGroup key={n} horizontal>\n\t\t\t\t\t<ListGroup.Item className='pend list' action><p className=\"requestList\">{this.docIdToName(pends[n].docid)} has requested {this.entryIdToName(pends[n].entryid)} {this.dateStyler(pends[n].dates)}</p>\n\t\t\t\t\t  \t<Button onClick={() => this.respond(pends[n].id,'accepted')} className=\"accept\" size=\"sm\" variant=\"success\">Accept</Button>\n\t\t\t\t\t  \t<Button onClick={() => this.toggleShow(pends[n].id)} className=\"deny\" size=\"sm\" variant=\"danger\">Deny</Button>\n\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t<ListGroup.Item className='dates list'>{pends[n].stamp}</ListGroup.Item>\n\t\t\t\t</ListGroup>\n\t\t\t)\n\t\t}\n\n\t\tfor (let j = 0; j < (Math.min(past.length,ctr)); j++){\n\t\t\tif (past[j].status === 'accepted'){\n\t\t\t\tpastList.push(\n\t\t\t\t\t<ListGroup key={j} horizontal>\n\t\t\t\t\t\t<ListGroup.Item className='past list' action disabled>\n\t\t\t\t\t\t\tYou <span className='accepted'>accepted</span> {this.docIdToName(past[j].docid)}'s request for {this.entryIdToName(past[j].entryid)} {this.dateStyler(past[j].dates)}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t<ListGroup.Item className='edates list'>{past[j].stamp}</ListGroup.Item>\n\t\t\t\t\t</ListGroup>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tpastList.push(\n\t\t\t\t\t<ListGroup key={j} horizontal>\n\t\t\t\t\t\t<ListGroup.Item className='past list' action onClick={() => this.toggleDShow(past[j].msg)}>\n\t\t\t\t\t\t\tYou <span className='denied'>denied</span> {this.docIdToName(past[j].docid)}'s request for {this.entryIdToName(past[j].entryid)} {this.dateStyler(past[j].dates)}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t\t<ListGroup.Item className='edates list'>{past[j].stamp}</ListGroup.Item>\n\t\t\t\t\t</ListGroup>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tlet docSelect = peopleList.map((doc,i) => {\n\t\t\treturn <option key={i} value={doc.lastname}>{doc.lastname}</option>\n\t\t})\n\n\t\tdocSelect.unshift(<option key={-1} value='All'>All</option>)\n\n\t\tlet adminSelect = () => {\n\t\t\treturn (\n\t\t\t\t<select /*value={peopleList[selectIndex].lastname || 'All'}*/ onChange={this.onPhysicianChange} className=\"top-child doc selector\">\n  \t\t\t\t\t{docSelect}\n\t\t\t\t</select>\n\t\t\t);\n\t\t}\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h4 className=\"requests\">Pending</h4>\n\t\t\t\t<div className=\"listStyleA\">\n\t\t\t\t\t{pendingList}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h4 className=\"requests\">Past Requests</h4>\n\t\t\t\t\t{adminSelect()}\n\t\t\t\t</div>\n\t\t\t\t<div className='listStyleE'>\n\t\t\t\t\t{pastList}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{this.showButton(past.length)}\n\t\t\t\t</div>\n\t\t\t\t<div className='modal'>\n\t\t\t\t\t<Modal show={show} onHide={this.toggleShow}>\n        \t\t\t\t<Modal.Header closeButton>\n          \t\t\t\t\t<Modal.Title id='modalTitle'>Denied Request Explanation</Modal.Title>\n       \t \t\t\t\t</Modal.Header>\n        \t\t\t\t<Form>\n        \t\t\t\t\t<Modal.Body>\n\t        \t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlTextarea1\">\n\t    \t\t\t\t\t\t\t<Form.Control onChange={this.onMsgChange} as=\"textarea\" rows=\"4\" />\n\t  \t\t\t\t\t\t\t</Form.Group>\n        \t\t\t\t\t</Modal.Body>\n        \t\t\t\t\t<Modal.Footer>\n          \t\t\t\t\t\t<Button onClick={this.toggleShow} variant=\"secondary\" >\n            \t\t\t\t\t\tClose\n          \t\t\t\t\t\t</Button>\n          \t\t\t\t\t \t<Button onClick={() => this.respond(this.state.id, \"denied\")} variant=\"primary\" >\n            \t\t\t\t\t\tSubmit\n          \t\t\t\t\t\t</Button>\n\t        \t\t\t\t</Modal.Footer>\n\t        \t\t\t</Form>\n      \t\t\t\t</Modal>\n\t\t\t\t</div>\n\t\t\t\t<div className='modal'>\n\t\t\t\t\t<Modal show={dshow} onHide={() => this.toggleDShow('')}>\n\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t<Modal.Title id='modalTitle'>Denied Request Explanation</Modal.Title>\n\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t<p>{msg}</p>\n\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t<Button onClick={() => this.toggleDShow('')} variant=\"secondary\" >\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t</Modal>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AMessages;"]},"metadata":{},"sourceType":"module"}